<project name="dataflow" default="jar">

  <description>
    Pack all clojure-datalog sources into a JAR. Compile those that can
    be compiled standalone if the clojure.jar property points us to
    clojure.jar .
  </description>

  <property name="src" location="src"/>
  <property name="build" location="classes"/>

  <target name="clojure.check">
    <condition property="hasclojure">
      <and>
        <available file="${clojure.jar}"/>
        <available file="${clojure-contrib.jar}"/>
      </and>
    </condition>
  </target>

  <!-- The JAR file to create. -->
  <property name="jarfile" location="clojure-datalog.jar"/>

  <target name="init">
    <tstamp/>
    <mkdir dir="${build}"/>
  </target>

  <target name="clean" description="Remove generated files and directories.">
    <delete file="${jarfile}"/>
    <delete dir="${build}"/>
  </target>

  <target name="test"
          depends="clojure.check"
	  description = "Run dataflow tests"
	  if="hasclojure">
    <java classname="clojure.main">
      <classpath>
        <path location="${build}"/>
        <path location="${src}"/>
        <path location="${clojure.jar}"/>
        <path location="${clojure-contrib.jar}"/>
      </classpath>
      <arg value="src/...."/>
    </java>
  </target>

  <target name="compile_clojure" depends="init,clojure.check"
          description="Compile sources."
          if="hasclojure">
    <java classname="clojure.lang.Compile">
      <classpath>
        <path location="${build}"/>
        <path location="${src}"/>
        <path location="${clojure.jar}"/>
        <path location="${clojure-contrib.jar}"/>
      </classpath>
      <sysproperty key="clojure.compile.path" value="${build}"/>
      <arg value="....."/>
    </java>
  </target>

  <target name="jar" description="Create jar file." depends="compile_clojure">
    <jar jarfile="${jarfile}">
      <fileset file="epl-v10.html"/>
      <fileset dir="${src}" includes="**/*.clj"/>
      <fileset dir="${build}" includes="**/*.class"/>
      <manifest>
        <attribute name="Class-Path" value="."/>
      </manifest>
    </jar>
  </target>

</project>
